//
// DO NOT EDIT
//
// Generated by swift-atproto
//

import SwiftAtproto
import Foundation

extension comwhtwndtypes {
    public class BlogGetEntryMetadataByName_Output: Codable {
        public var cid: String?
        public var entryUri: String
        public var lastUpdate: String?

        public init(cid: String?, entryUri: String, lastUpdate: String?) {
            self.cid = cid
            self.entryUri = entryUri
            self.lastUpdate = lastUpdate
        }

        enum CodingKeys: String, CodingKey {
            case cid
            case entryUri
            case lastUpdate
        }
    }

    public enum BlogGetEntryMetadataByName_Error: XRPCError {
        case notfound(String?)
        case unexpected(error: String?, message: String?)

        public init(error: UnExpectedError) {
            switch error.error {
            case "NotFound":
                self = .notfound(error.message)
            default:
                self = .unexpected(error: error.error, message: error.message)
            }
        }

        public var error: String? {
            switch self {
            case .notfound:
                return "NotFound"
            case let .unexpected(error, _):
                return error
            }
        }

        public var message: String? {
            switch self {
            case let .notfound(message):
                return message
            case let .unexpected(_, message):
                return message
            }
        }
    }

    public static func BlogGetEntryMetadataByName(client: any XRPCClientProtocol, author: String, entryTitle: String) async throws -> BlogGetEntryMetadataByName_Output {
        let params: Parameters = ["author": .string(author), "entryTitle": .string(entryTitle)]
        do {
            return try await client.fetch(endpoint: "com.whtwnd.blog.getEntryMetadataByName", contentType: "*/*", httpMethod: .get, params: params, input: Bool?.none, retry: true)
        } catch let error as UnExpectedError {
            throw BlogGetEntryMetadataByName_Error(error: error)
        }
    }
}
