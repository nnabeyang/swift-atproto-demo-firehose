//
// DO NOT EDIT
//
// Generated by swift-atproto
//

import SwiftAtproto
import Foundation

extension comatprototypes {
    public enum ModerationDefs_ReasonType: RawRepresentable, Codable {
        public typealias RawValue = String

        case comAtprotoModerationDefsReasonspam
        case comAtprotoModerationDefsReasonviolation
        case comAtprotoModerationDefsReasonmisleading
        case comAtprotoModerationDefsReasonsexual
        case comAtprotoModerationDefsReasonrude
        case comAtprotoModerationDefsReasonother
        case comAtprotoModerationDefsReasonappeal
        case unknown(String)

        public init?(rawValue: String) {
            switch rawValue {
            case "com.atproto.moderation.defs#reasonSpam":
                self = .comAtprotoModerationDefsReasonspam
            case "com.atproto.moderation.defs#reasonViolation":
                self = .comAtprotoModerationDefsReasonviolation
            case "com.atproto.moderation.defs#reasonMisleading":
                self = .comAtprotoModerationDefsReasonmisleading
            case "com.atproto.moderation.defs#reasonSexual":
                self = .comAtprotoModerationDefsReasonsexual
            case "com.atproto.moderation.defs#reasonRude":
                self = .comAtprotoModerationDefsReasonrude
            case "com.atproto.moderation.defs#reasonOther":
                self = .comAtprotoModerationDefsReasonother
            case "com.atproto.moderation.defs#reasonAppeal":
                self = .comAtprotoModerationDefsReasonappeal
            default:
                self = .unknown(rawValue)
            }
        }

        public var rawValue: String {
            switch self {
            case .comAtprotoModerationDefsReasonspam:
                "com.atproto.moderation.defs#reasonSpam"
            case .comAtprotoModerationDefsReasonviolation:
                "com.atproto.moderation.defs#reasonViolation"
            case .comAtprotoModerationDefsReasonmisleading:
                "com.atproto.moderation.defs#reasonMisleading"
            case .comAtprotoModerationDefsReasonsexual:
                "com.atproto.moderation.defs#reasonSexual"
            case .comAtprotoModerationDefsReasonrude:
                "com.atproto.moderation.defs#reasonRude"
            case .comAtprotoModerationDefsReasonother:
                "com.atproto.moderation.defs#reasonOther"
            case .comAtprotoModerationDefsReasonappeal:
                "com.atproto.moderation.defs#reasonAppeal"
            case let .unknown(value):
                value
            }
        }

        public init(from decoder: any Decoder) throws {
            let rawValue = try String(from: decoder)
            self = Self (rawValue: rawValue)!
        }

        public func encode(to encoder: any Encoder) throws {
            try rawValue.encode(to: encoder)
        }
    }
}
