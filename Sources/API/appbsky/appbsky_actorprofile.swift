//
// DO NOT EDIT
//
// Generated by swift-atproto
//

import SwiftAtproto
import Foundation

extension appbskytypes {
    public enum ActorProfile_Labels: Codable {
        case comAtprotoLabelDefsSelfLabels(comatprototypes.LabelDefs_SelfLabels)
        case unknown(UnknownRecord)

        enum CodingKeys: String, CodingKey {
            case type = "$type"
        }

        public init(from decoder: Decoder) throws {
            let container = try decoder.container(keyedBy: CodingKeys.self)
            let type = try container.decode(String.self, forKey: .type)
            switch type {
            case "com.atproto.label.defs#selfLabels":
                self = try .comAtprotoLabelDefsSelfLabels(.init(from: decoder))
            default:
                self = try .unknown(.init(from: decoder))
            }
        }

        public func encode(to encoder: Encoder) throws {
            var container = encoder.container(keyedBy: CodingKeys.self)
            switch self {
            case let .comAtprotoLabelDefsSelfLabels(value):
                try container.encode("com.atproto.label.defs#selfLabels", forKey: .type)
                try value.encode(to: encoder)
            case .unknown:
                break
            }
        }
    }
}

public class appbskytypes_ActorProfile: Codable {
    public let type = "app.bsky.actor.profile"
    public var avatar: LexBlob?
    public var banner: LexBlob?
    public var createdAt: String?
    public var description: String?
    public var displayName: String?
    public var joinedViaStarterPack: comatprototypes.RepoStrongRef?
    public var labels: appbskytypes.ActorProfile_Labels?

    public init(avatar: LexBlob?, banner: LexBlob?, createdAt: String?, description: String?, displayName: String?, joinedViaStarterPack: comatprototypes.RepoStrongRef?, labels: appbskytypes.ActorProfile_Labels?) {
        self.avatar = avatar
        self.banner = banner
        self.createdAt = createdAt
        self.description = description
        self.displayName = displayName
        self.joinedViaStarterPack = joinedViaStarterPack
        self.labels = labels
    }

    enum CodingKeys: String, CodingKey {
        case type = "$type"
        case avatar
        case banner
        case createdAt
        case description
        case displayName
        case joinedViaStarterPack
        case labels
    }
}
